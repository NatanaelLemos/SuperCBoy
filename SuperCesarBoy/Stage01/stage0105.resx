<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ground2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Qev9ssl7o+k/U9n1d8gxvxYAAAAASUVORK5CYII=
</value>
  </data>
</root>